apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "mongodb.fullname" . }}
  labels:
    app: {{ template "mongodb.name" . }}
    chart: {{ template "mongodb.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ template "mongodb.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "mongodb.name" . }}
        release: {{ .Release.Name }}
        {{- if .Values.mongodbBackupEnabled }}
        backup: mongodb
        {{- end }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: mongodb
              containerPort: 27017
              protocol: TCP
          env:
            {{- if and .Values.mongodbUsername .Values.mongodbDatabase }}
            - name: MONGODB_USER
              value: {{ .Values.mongodbUsername }}
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "mongodb.fullname" . }}
                  key: mongodb-password
            - name: MONGODB_DATABASE
              value: {{ .Values.mongodbDatabase }}
            {{- end }}
            - name: MONGODB_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "mongodb.fullname" . }}
                  key: mongodb-admin-password
          volumeMounts:
            - name: data
              mountPath: /var/lib/mongodb/data
          livenessProbe:
            tcpSocket:
              port: 27017
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - '-i'
              - '-c'
              - >- 
                mongo --eval "db.adminCommand('ping')"
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
      - name: data
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "mongodb.fullname" . }}{{- end }}

      {{- else }}
        emptyDir: {}
      {{- end -}}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
